<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-10-14T17:04:22+08:00</updated><id>http://localhost:4000/</id><title type="html">LiXizhi’s Personal Website</title><subtitle>Xizhi's Ideas &amp; Blogs</subtitle><entry><title type="html">发布一款光谷社区第三方 Android App</title><link href="http://localhost:4000/android/2017/10/14/guanggoo-android-app.html" rel="alternate" type="text/html" title="发布一款光谷社区第三方 Android App" /><published>2017-10-14T00:00:00+08:00</published><updated>2017-10-14T00:00:00+08:00</updated><id>http://localhost:4000/android/2017/10/14/guanggoo-android-app</id><content type="html" xml:base="http://localhost:4000/android/2017/10/14/guanggoo-android-app.html">&lt;p&gt;在过去的一个来月，我利用业余时间做了一款光谷社区的第三方 Android 客户端。&lt;/p&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;光谷社区是我在决定离开帝都回武汉的过程中，及回武汉之后关注得较多的武汉本土社区，网站 &lt;a href=&quot;http://guanggoo.com&quot;&gt;http://guanggoo.com&lt;/a&gt; 自己的 description 是这样的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;光谷社区是源自光谷的高端社交网络，这里有关于创业、创意、IT、金融等最热话题的交流，也有招聘问答、活动交友等最新资讯的发布。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;描述得还比较准确。我觉得身在光谷，或者心系光谷的童鞋们可以关注一下。&lt;/p&gt;

&lt;h2 id=&quot;发布详情&quot;&gt;发布详情&lt;/h2&gt;

&lt;p&gt;目前支持特性：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;登录&lt;/li&gt;
  &lt;li&gt;首页主题列表（三种视图）&lt;/li&gt;
  &lt;li&gt;主题详情 / 评论列表&lt;/li&gt;
  &lt;li&gt;节点列表 / 节点主题列表&lt;/li&gt;
  &lt;li&gt;评论 / 艾特用户&lt;/li&gt;
  &lt;li&gt;分享主题链接&lt;/li&gt;
  &lt;li&gt;发表新主题&lt;/li&gt;
  &lt;li&gt;查看用户信息&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;源码放在 GitHub 上：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mzlogin/guanggoo-android&quot;&gt;https://github.com/mzlogin/guanggoo-android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;部分界面截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://mazhuang.org/guanggoo-android/screenshots/topic-list.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://mazhuang.org/guanggoo-android/screenshots/topic-detail.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://mazhuang.org/guanggoo-android/screenshots/nodes-list.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://mazhuang.org/guanggoo-android/screenshots/drawer.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更多的功能开发、完善以及优化还在进行中，也希望看到的朋友们下载试用起来，多提建议多交流。&lt;/p&gt;

&lt;p&gt;好吧，啰嗦了这么多，哪里能够下载得到呢？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APK 下载链接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（如果是在微信里看到这里，建议长按后复制链接到浏览器打开）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mazhuang.org/guanggoo-android/guanggoo-lastest.apk&quot;&gt;http://mazhuang.org/guanggoo-android/guanggoo-lastest.apk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;百度网盘备用链接：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1pL0t1Zd&quot;&gt;https://pan.baidu.com/s/1pL0t1Zd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;扫描或识别二维码下载&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（如果使用微信识别二维码不能开始下载，还是复制上方的链接到浏览器打开下载吧）&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;192px&quot; height=&quot;192px&quot; src=&quot;http://mazhuang.org/guanggoo-android/qrcode.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;为什么会做这个&quot;&gt;为什么会做这个&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;社区目前只有 Web 页面，做了移动端适配，体验也还不错。不过作为一个打开频率较高的应用，我还是希望能用上 App；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;之前偶然在社区的几个帖子里也有一些用户问到是否有 App 可用，都没有了下文，可以满足一下这部分用户的需求；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;作为一个长期维护的业余项目，更深刻地体会 App 开发的整个生命周期，也将一些想学习的技术应用到实际项目中；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;借此机会认识一下光谷技术圈子里志趣相投的朋友。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;前缘后续&quot;&gt;前缘后续&lt;/h2&gt;

&lt;p&gt;上 GitHub 搜索 guanggoo 出来的结果很少，发现有一个 &lt;a href=&quot;https://github.com/cauil/react-native-guanggoo&quot;&gt;cauil/react-native-guanggoo&lt;/a&gt; 的项目适配了 iOS，独缺 Android 客户端，于是决定自己写一个。要不是那一阵刚好闹 Facebook 开源许可证风波，让人没有学习 React Native 的信心和欲望，也许我就学点 React Native 在这位仁兄的基础上开发了。&lt;/p&gt;

&lt;p&gt;经过几周业余时间和十一长假期间的开发，目前完成度不算特别高，但常用的功能已经基本可用了，当然还有一些功能比如注册、帖子里的外部链接打开等，我是先抛给了系统浏览器。想着只埋头自己开发也比较枯燥，决定先放出一个版本来让网友们吐吐槽，提提意见，应该能做得更好。&lt;/p&gt;

&lt;p&gt;PS: 本文非软文，也没有收取光谷社区任何好处，请光谷社区嘴炮管理员看到这里帮我开通个 VIP，我的社区 ID 是 mzlogin，:-P。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;好了，最后照例安利一下我自己的微信公众号，近期专注 Java、Android 相关的技术分享，如果你感兴趣，可以关注一下接收最新动态。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;192px&quot; height=&quot;192px&quot; src=&quot;http://mazhuang.org/assets/images/qrcode.jpg&quot; /&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">在过去的一个来月，我利用业余时间做了一款光谷社区的第三方 Android 客户端。</summary></entry><entry><title type="html">阅读源码的意义与方法</title><link href="http://localhost:4000/android/2017/10/05/rtfsc-methods-and-meaning.html" rel="alternate" type="text/html" title="阅读源码的意义与方法" /><published>2017-10-05T00:00:00+08:00</published><updated>2017-10-05T00:00:00+08:00</updated><id>http://localhost:4000/android/2017/10/05/rtfsc-methods-and-meaning</id><content type="html" xml:base="http://localhost:4000/android/2017/10/05/rtfsc-methods-and-meaning.html">&lt;p&gt;思索了这两个问题良久，也去知乎找了一些相关话题的问答，但并没有标准答案。所以，我这里也只是记录一些我对此的看法，也许会随着 RTFSC 阅历的丰富而发生变化，我会记录更新于 &lt;a href=&quot;https://github.com/mzlogin/rtfsc-android&quot;&gt;https://github.com/mzlogin/rtfsc-android&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;意义&quot;&gt;意义&lt;/h2&gt;

&lt;p&gt;在我看来，阅读源码的意义在于学习优秀的「套路」。&lt;/p&gt;

&lt;p&gt;这里的「套路」所指范围很广，大到架构设计，小到可取的命名风格，还有设计模式、实现某类功能使用到的数据结构和算法等等。所谓高手，其实就是能比大部分人更早更快地掌握套路并熟练运用之人。&lt;/p&gt;

&lt;p&gt;埋头在自己的天地里耕芸固然也能逐渐进步和成长，但总会有时候会遇到一些场景，你苦思良久也无法做出良好的设计，总会有一些时候，纠结如何为一个变量命名让你停下飞速敲击的手指。这些令你为难的场景，先贤们也许早就遇到过，并且给出了优雅的解决方案。看优秀的源码的时候，将这样的场景与对应的方案收入囊中，或者仅仅在脑中留下一个印象也好，以便在需要的时候，你的武器库里总能掏出一把称手的家伙来。&lt;/p&gt;

&lt;h2 id=&quot;一些方法&quot;&gt;一些方法&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;不应该这样&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不应该漫无目的地随手拿起一分源码，试图去通读。这一方面会过目即忘无所收获，另一方面会枯燥得让你迅速从着手到放弃。学习的方式有很多种，阅读源码并不一定是最适合你当前的情况的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;应该这样&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;精心挑选要阅读的源码项目。&lt;/p&gt;

    &lt;p&gt;这最好是与你的编程语言、你的工作内容、你的兴趣所在相关的，这样才能更切实地感受到阅读源码给你带来的益处，更有动力继续。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果你想学习的知识点有官方文档，先看文档再看源码。&lt;/p&gt;

    &lt;p&gt;直接从源码着手，搞清楚原理固然是好，但是源码有可能是难啃的，先熟悉官方提供给所有人看的文档，能较为平滑地对这方面的知识先有个大概的了解，然后再结合源码去深入。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提出具体的问题，然后带着问题到源码中找答案。&lt;/p&gt;

    &lt;p&gt;比如在使用 Toast 的过程中，你可能会想到一些问题：&lt;code class=&quot;highlighter-rouge&quot;&gt;Toast.makeText(...).show()&lt;/code&gt; 时发生了什么？Toast 能不能在非 UI 线程调用？能不能自定义 Toast 布局？诸如此类。在源码中探寻完你想要的答案，你的目的也就达到了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从一些共性层面入手。&lt;/p&gt;

    &lt;p&gt;大部分的程序里都会使用到的东西，比如线程模型、UI 组织结构、任务调度方式等等。针对某一个方面去了解，比漫无目的要有效率得多。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最好能够编译运行起来。&lt;/p&gt;

    &lt;p&gt;如果一份代码你只能看不能跑，那可能读到一些地方你只能猜这个地方的数据值和跳转结构是怎么样的，而很有可能你猜的是错的。但如果你能编译运行，那在需要的时候你可以修改，加日志等等来更好地观察和验证你的想法，得到正确的理解。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;做一些笔记。&lt;/p&gt;

    &lt;p&gt;一方面是将你的学习成果保留下来，方便随时查阅，毕竟只凭脑子记忆是不靠谱的；另一方面在学习的过程中，也能帮助理解。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对我的文章感兴趣的朋友，可以关注我的微信公众号 isprogrammer，接收我的更新通知。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;192px&quot; height=&quot;192px&quot; src=&quot;http://mazhuang.org/assets/images/qrcode.jpg&quot; /&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">思索了这两个问题良久，也去知乎找了一些相关话题的问答，但并没有标准答案。所以，我这里也只是记录一些我对此的看法，也许会随着 RTFSC 阅历的丰富而发生变化，我会记录更新于 https://github.com/mzlogin/rtfsc-android。</summary></entry><entry><title type="html">Android 源码分析开篇</title><link href="http://localhost:4000/android/2017/09/23/rtfsc-android-start.html" rel="alternate" type="text/html" title="Android 源码分析开篇" /><published>2017-09-23T00:00:00+08:00</published><updated>2017-09-23T00:00:00+08:00</updated><id>http://localhost:4000/android/2017/09/23/rtfsc-android-start</id><content type="html" xml:base="http://localhost:4000/android/2017/09/23/rtfsc-android-start.html">&lt;p&gt;在心中谋划已久的此事终于要开篇了，虽然迟了点，十年前没有种的树，就从现在开始种吧。&lt;/p&gt;

&lt;p&gt;自 2014 年底从 Windows 开发转向 Android 开发以后，到现在的两年多时间里，也陆陆续续看了一些强相关的书籍和教程，按我在豆瓣标记的时间顺序：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;《Android Programming: The Big Nert Ranch Guide》&lt;/li&gt;
  &lt;li&gt;《疯狂 Java 讲义》&lt;/li&gt;
  &lt;li&gt;《疯狂 Android 讲义》&lt;/li&gt;
  &lt;li&gt;《Android 软件安全与逆向分析》&lt;/li&gt;
  &lt;li&gt;《深入理解 Java 虚拟机》&lt;/li&gt;
  &lt;li&gt;《Android Training》&lt;/li&gt;
  &lt;li&gt;《Android 开发艺术探索》&lt;/li&gt;
  &lt;li&gt;《Android 群英传》&lt;/li&gt;
  &lt;li&gt;《App 研发录》&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再加上平时在 GitHub 和掘金等技术社区的晃荡，接触过的资料其实也不少了，但回想起年初找工作的时候一些比较失落的经历，自身存在一些很要命的问题，就是如自己一直也知道的那样：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;技术的广度还可以，可深度不够，不够聚焦；&lt;/li&gt;
  &lt;li&gt;掌握的知识是散乱的，不成体系，禁不住往深了问。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这一方面归因于自己的学习方式需要优化，技术书籍的学习不能只是通读，精读、主题阅读和针对性的实践总结一样不能少；另一方面挑选书籍要更有目的性，最好是明晰的由浅入深的层次递进；还有就是市面上流行的书籍和网络上的技术分享恐怕都无法让我彻底改善这种情况。&lt;/p&gt;

&lt;p&gt;这个尴尬的年纪，在一个个焦虑的夜晚，躺在床上听着窗外偶尔传来的狗叫，汽车的呼啸，也会对自己呐喊，我不要做一个会用九种语言写 Hello World 但无一精通的程序员，迫切需要 &lt;strong&gt;聚焦&lt;/strong&gt;、&lt;strong&gt;精通&lt;/strong&gt; 和 &lt;strong&gt;成体系&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;一切就从自己的工作内容最相关的业务与技术开始入手。业务相关的知识可以在工作时间来积累，业余的时间里，多 Read The F*cking Source Code，从优秀的源码和设计里汲取营养。有 AOSP 这样包罗万象的宝藏在侧，也无需纠结和寻觅到底应该看些什么，里面程序设计语言、设计模式、架构模式等等，应有尽有。&lt;/p&gt;

&lt;p&gt;所以，最近计划开始写一系列 Android 源码分析的文章，包括 Android 系统源码及一些优秀的第三方类库等等。这将是一个比较漫长的过程，需要一个脉络，可选的方式是自底向上和自顶向下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自底向上&lt;/strong&gt;，一开始就是啃硬骨头，理解各种底层概念和知识，对我这样的选手来讲，容易失去兴趣，但是后期理解上层的东西更顺畅，毕竟基础知识点已经铺垫好了。比如《老罗的 Android 之旅》，就是比较典型的采用这种方式的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ^ 难度
 |    ---
 |   /   \
 |   |   |
 |  /    |
 |  |    |
 | /     |
 | |     |
 | |     +-----------------
 |/
 +-------------------------&amp;gt;
                        时间
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;自顶向下&lt;/strong&gt;，预计是需要从几个熟悉的话题展开，充分下探之后，基础知识大致铺垫开，后面才会比较容易。这样做的一个好处是比较有目的性，总是知道下一个步要去找些什么，看些什么；另一点是从熟悉的东西讲起，前期曲线比较平滑。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ^ 难度
 |              _
 |            _/ |
 |          _/    \
 |        _/       \
 |       /          \
 |     _/           |
 |   _/              \
 | _/                 \----
 |/
 +-------------------------&amp;gt;
                        时间
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;自认为没有恒心与毅力像罗升阳那样自底向上面面俱到地把 Android 的各个方面都分析一遍，我的大致的思路是打算从我们最常用的一些类开始，自顶向下摸索，牵扯到哪些需要深入理解的知识点，就另开一篇详细说明，这个过程类似 JVM 的 GC 中采用的可达性算法，只要选好了 GC roots，无论是深度优先还是广度优先，天长日久，总会覆盖所有我们常用的技术及其内部的原理。&lt;/p&gt;

&lt;p&gt;举个例子，比如我第一篇打算分析 Toast 类，那由它展开可能会逐渐讲到很多的话题：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Toast
|
|--- Handler
|    |
|    |--- Communicating with the UI thread
|    |
|    |--- Looper/Message/MessageQueue
|         |
|         |--- ThreadLocal
|
|--- Binder
|    |
|    |--- ServiceManager
|    |
|    |--- Inter-process communication
|    |
|    |--- ...
|
|--- Update UI outside the main thread
|
|--- ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;每介绍一篇，可能会发散出一些本篇中涉及但是没有深入讲解的知识点，留待后续补上，我将在文章最后把这些知识点列出来。在当前文章中需要提到的地方，就插个桩，留个尽量恰当的比喻在那里，「把它当作 XXX 理解就好了」。&lt;/p&gt;

&lt;p&gt;当暂时沿着某一个主题延伸不下去，又没有找到合适的新主题的时候，就按一些比较有体系的主题来写，比如「Android 里的设计模式」，可以单独写一个系列。&lt;/p&gt;

&lt;p&gt;这样做的目的，主要是想进行一些比较深入的学习和对过往知识的整理，将一个一个散落的知识点孤岛串联起来，让它们成为我的技能战斗群，写着应用代码时能对表面之下的原理了然于胸，减少写代码时对猜测和调试的依赖，对每一个我敢写出来的技能点，都能自信满满地与人对谈。&lt;/p&gt;

&lt;p&gt;目前的计划是按照我最近一段时间更新公众号的频率，大约十天更新一篇，阅读源码主要使用的工具和方式是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub 上的 &lt;a href=&quot;https://github.com/android/platform_frameworks_base&quot;&gt;android/platform_frameworks_base&lt;/a&gt; 等源码配合 Chrome 插件 insight.io&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mazhuang.org/2016/12/14/rtfsc-with-opengrok/&quot;&gt;自己电脑上搭建的 OpenGrok 浏览 Android 7.1.2 源码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://androidxref.com/7.1.1_r6/&quot;&gt;http://androidxref.com/7.1.1_r6/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大致思路就是这样，实践一阵试试。不知道自顶向下的方法是否走得下去，要是实在不行，还是乖乖回去跟着老罗的脚步学习吧。&lt;/p&gt;

&lt;p&gt;开篇，就当先立个 Flag 在这里，万一坚持做下去了呢，牛皮都不敢吹还哪敢做成什么事啊，最次也「世上无难事，只要肯放弃」嘛。对此有兴趣的朋友，请关注我的微信公众号「闷骚的程序员」，一起 Read The F*cking Android Source Code。&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;192px&quot; height=&quot;192px&quot; src=&quot;http://mazhuang.org/assets/images/qrcode.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;后续相关的系列文章，会在 GitHub 仓库 &lt;a href=&quot;https://github.com/mzlogin/rtfsc-android&quot;&gt;mzlogin/rtfsc-android&lt;/a&gt; 汇总更新，欢迎关注，看我起高楼，或是啪啪打脸。&lt;/p&gt;</content><author><name></name></author><summary type="html">在心中谋划已久的此事终于要开篇了，虽然迟了点，十年前没有种的树，就从现在开始种吧。</summary></entry><entry><title type="html">图解 SQL 里的各种 JOIN</title><link href="http://localhost:4000/database/2017/09/11/joins-in-sql.html" rel="alternate" type="text/html" title="图解 SQL 里的各种 JOIN" /><published>2017-09-11T00:00:00+08:00</published><updated>2017-09-11T00:00:00+08:00</updated><id>http://localhost:4000/database/2017/09/11/joins-in-sql</id><content type="html" xml:base="http://localhost:4000/database/2017/09/11/joins-in-sql.html">&lt;p&gt;从业以来主要在做客户端，用到的数据库都是表结构比较简单的 SQLite，以我那还给老师一大半的 SQL 水平倒也能对付。现在偶尔需要到后台的 SQL Server 里追查一些数据问题，就显得有点捉襟见肘了，特别是各种 JOIN，有时候傻傻分不清楚，于是索性弄明白并做个记录。&lt;/p&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;在各种问答社区里谈及 SQL 里的各种 JOIN 之间的区别时，最被广为引用的是 CodeProject 上 &lt;a href=&quot;https://www.codeproject.com/script/Membership/View.aspx?mid=5909363&quot;&gt;C.L. Moffatt&lt;/a&gt; 的文章 &lt;a href=&quot;https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins&quot;&gt;Visual Representation of SQL Joins&lt;/a&gt;，他确实讲得简单明了，使用文氏图来帮助理解，效果明显。本文将沿用他的讲解方式，稍有演绎，可以视为该文较为粗糙的中译版。&lt;/p&gt;

&lt;h2 id=&quot;约定&quot;&gt;约定&lt;/h2&gt;

&lt;p&gt;下文将使用两个数据库表 Table_A 和 Table_B 来进行示例讲解，其结构与数据分别如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * FROM Table_A ORDER BY PK ASC;
+----+---------+
| PK | Value   |
+----+---------+
|  1 | both ab |
|  2 | only a  |
+----+---------+
2 rows in set (0.00 sec)

mysql&amp;gt; SELECT * from Table_B ORDER BY PK ASC;
+----+---------+
| PK | Value   |
+----+---------+
|  1 | both ab |
|  3 | only b  |
+----+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中 PK 为 1 的记录在 Table_A 和 Table_B 中都有，2 为 Table_A 特有，3 为 Table_B 特有。&lt;/p&gt;

&lt;h2 id=&quot;常用的-join&quot;&gt;常用的 JOIN&lt;/h2&gt;

&lt;h3 id=&quot;inner-join&quot;&gt;INNER JOIN&lt;/h3&gt;

&lt;p&gt;INNER JOIN 一般被译作内连接。内连接查询能将左表（表 A）和右表（表 B）中能关联起来的数据连接后返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/inner-join.png&quot; alt=&quot;INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ab |
+------+------+---------+---------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;Table_A&lt;/code&gt; 的别名，&lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;Table_B&lt;/code&gt; 的别名，下同。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;left-join&quot;&gt;LEFT JOIN&lt;/h3&gt;

&lt;p&gt;LEFT JOIN 一般被译作左连接，也写作 LEFT OUTER JOIN。左连接查询会返回左表（表 A）中所有记录，不管右表（表 B）中有没有关联的数据。在右表中找到的关联数据列也会被一起返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/left-join.png&quot; alt=&quot;LEFT JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
|    2 | NULL | only a  | NULL    |
+------+------+---------+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;right-join&quot;&gt;RIGHT JOIN&lt;/h3&gt;

&lt;p&gt;RIGHT JOIN 一般被译作右连接，也写作 RIGHT OUTER JOIN。右连接查询会返回右表（表 B）中所有记录，不管左表（表 A）中有没有关联的数据。在左表中找到的关联数据列也会被一起返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/right-join.png&quot; alt=&quot;RIGHT JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
| NULL |    3 | NULL    | only b  |
+------+------+---------+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;full-outer-join&quot;&gt;FULL OUTER JOIN&lt;/h3&gt;

&lt;p&gt;FULL OUTER JOIN 一般被译作外连接、全连接，实际查询语句中可以写作 &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL JOIN&lt;/code&gt;。外连接查询能返回左右表里的所有记录，其中左右表里能关联起来的记录被连接后返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/full-outer-join.png&quot; alt=&quot;FULL OUTER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN Table_B B
ON A.PK = B.PK' at line 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：我当前示例使用的 MySQL 不支持 &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;应当返回的结果（使用 UNION 模拟）：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * 
    -&amp;gt; FROM Table_A
    -&amp;gt; LEFT JOIN Table_B 
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; UNION ALL
    -&amp;gt; SELECT *
    -&amp;gt; FROM Table_A
    -&amp;gt; RIGHT JOIN Table_B 
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_A.PK IS NULL;
+------+---------+------+---------+
| PK   | Value   | PK   | Value   |
+------+---------+------+---------+
|    1 | both ab |    1 | both ba |
|    2 | only a  | NULL | NULL    |
| NULL | NULL    |    3 | only b  |
+------+---------+------+---------+
3 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;

&lt;p&gt;以上四种，就是 SQL 里常见 JOIN 的种类和概念了，看一下它们的合影：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/general-joins.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有没有感觉少了些什么，学数学集合时完全不止这几种情况？确实如此，继续看。&lt;/p&gt;

&lt;h2 id=&quot;延伸用法&quot;&gt;延伸用法&lt;/h2&gt;

&lt;h3 id=&quot;left-join-excluding-inner-join&quot;&gt;LEFT JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回左表有但右表没有关联数据的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/left-join-excluding-inner-join.png&quot; alt=&quot;LEFT JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    2 | NULL | only a  | NULL    |
+------+------+---------+---------+
1 row in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;right-join-excluding-inner-join&quot;&gt;RIGHT JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回右表有但左表没有关联数据的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/right-join-excluding-inner-join.png&quot; alt=&quot;RIGHT JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
| NULL |    3 | NULL    | only b  |
+------+------+---------+---------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;full-outer-join-excluding-inner-join&quot;&gt;FULL OUTER JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回左表和右表里没有相互关联的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/full-outer-join-excluding-inner-join.png&quot; alt=&quot;FULL OUTER JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因为使用到了 FULL OUTER JOIN，MySQL 在执行该查询时再次报错。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN Table_B B
ON A.PK = B.PK
WHERE A.PK IS NULL
OR B.PK IS NULL' at line 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;应当返回的结果（用 UNION 模拟）：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * 
    -&amp;gt; FROM Table_A
    -&amp;gt; LEFT JOIN Table_B
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_B.PK IS NULL
    -&amp;gt; UNION ALL
    -&amp;gt; SELECT *
    -&amp;gt; FROM Table_A
    -&amp;gt; RIGHT JOIN Table_B
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_A.PK IS NULL;
+------+--------+------+--------+
| PK   | Value  | PK   | Value  |
+------+--------+------+--------+
|    2 | only a | NULL | NULL   |
| NULL | NULL   |    3 | only b |
+------+--------+------+--------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;以上七种用法基本上可以覆盖各种 JOIN 查询了。七种用法的全家福：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/sql-joins.png&quot; alt=&quot;SQL JOINS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看着它们，我仿佛回到了当年学数学，求交集并集的时代……&lt;/p&gt;

&lt;p&gt;顺带张贴一下 &lt;a href=&quot;https://www.codeproject.com/script/Membership/View.aspx?mid=5909363&quot;&gt;C.L. Moffatt&lt;/a&gt; 带 SQL 语句的图片，配合学习，风味更佳：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/Visual_SQL_JOINS_orig.jpg&quot; alt=&quot;SQL JOINS&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;更新更多的-join&quot;&gt;更新：更多的 JOIN&lt;/h2&gt;

&lt;p&gt;除以上几种外，还有更多的 JOIN 用法，比如 CROSS JOIN（迪卡尔集）、SELF JOIN，可以参考 &lt;a href=&quot;https://www.w3resource.com/slides/sql-joins-slide-presentation.php&quot;&gt;SQL JOINS Slide Presentation&lt;/a&gt; 学习。&lt;/p&gt;

&lt;h3 id=&quot;cross-join&quot;&gt;CROSS JOIN&lt;/h3&gt;

&lt;p&gt;返回左表与右表之间符合条件的记录的迪卡尔集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图示：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/database/cross-join.png&quot; alt=&quot;CORSS JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
|    2 |    1 | only a  | both ba |
|    1 |    3 | both ab | only b  |
|    2 |    3 | only a  | only b  |
+------+------+---------+---------+
4 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面讲过的几种 JOIN 查询的结果都可以用 CROSS JOIN 加条件模拟出来，比如 INNER JOIN 对应 &lt;code class=&quot;highlighter-rouge&quot;&gt;CROSS JOIN ... WHERE A.PK = B.PK&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;self-join&quot;&gt;SELF JOIN&lt;/h3&gt;

&lt;p&gt;返回表与自己连接后符合条件的记录，一般用在表里有一个字段是用主键作为外键的情况。&lt;/p&gt;

&lt;p&gt;比如 Table_C 的结构与数据如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+----------+-------------+
| EMP_ID | EMP_NAME | EMP_SUPV_ID |
+--------+----------+-------------+
|   1001 | Ma       |        NULL |
|   1002 | Zhuang   |        1001 |
+--------+----------+-------------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EMP_ID 字段表示员工 ID，EMP_NAME 字段表示员工姓名，EMP_SUPV_ID 表示主管 ID。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现在我们想查询所有有主管的员工及其对应的主管 ID 和姓名，就可以用 SELF JOIN 来实现。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_SUPV_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_SUPV_NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_SUPV_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+----------+-------------+---------------+
| EMP_ID | EMP_NAME | EMP_SUPV_ID | EMP_SUPV_NAME |
+--------+----------+-------------+---------------+
|   1002 | Zhuang   |        1001 | Ma            |
+--------+----------+-------------+---------------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;补充说明&quot;&gt;补充说明&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;文中的图使用 Keynote 绘制；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;个人的体会是 SQL 里的 JOIN 查询与数学里的求交集、并集等很像；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQLite 不支持 RIGHT JOIN 和 FULL OUTER JOIN，可以使用 LEFT JOIN 和 UNION 来达到相同的效果；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MySQL 不支持 FULL OUTER JOIN，可以使用 LEFT JOIN 和 UNION 来达到相同的效果；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假如你对我的文章感兴趣，可以关注我的微信公众号 isprogrammer 随时阅读更多内容。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins&quot;&gt;Visual Representation of SQL Joins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4796872/how-to-do-a-full-outer-join-in-mysql&quot;&gt;How to do a FULL OUTER JOIN in MySQL?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3resource.com/slides/sql-joins-slide-presentation.php&quot;&gt;SQL JOINS Slide Presentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3resource.com/sql/joins/perform-a-self-join.php&quot;&gt;SQL Self Join&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">从业以来主要在做客户端，用到的数据库都是表结构比较简单的 SQLite，以我那还给老师一大半的 SQL 水平倒也能对付。现在偶尔需要到后台的 SQL Server 里追查一些数据问题，就显得有点捉襟见肘了，特别是各种 JOIN，有时候傻傻分不清楚，于是索性弄明白并做个记录。</summary></entry><entry><title type="html">关于 Markdown 的一些奇技淫巧</title><link href="http://localhost:4000/markdown/2017/09/01/markdown-odd-skills.html" rel="alternate" type="text/html" title="关于 Markdown 的一些奇技淫巧" /><published>2017-09-01T00:00:00+08:00</published><updated>2017-09-01T00:00:00+08:00</updated><id>http://localhost:4000/markdown/2017/09/01/markdown-odd-skills</id><content type="html" xml:base="http://localhost:4000/markdown/2017/09/01/markdown-odd-skills.html">&lt;p&gt;自从几年前开始在 GitHub 玩耍，接触到 Markdown 之后，就一发不可收拾，在各种文档编辑上，有条件用 Markdown 的尽量用，不能用的创造条件也要用——README、博客、公众号、接口文档等等全都是，比如当前这篇文章就是用 Markdown 编辑而成。&lt;/p&gt;

&lt;p&gt;这几年也发现越来越多的网站和程序提供了对 Markdown 的支持，从最初接触的 GitHub、Jekyll，到简书、掘金、CSDN 等等，由此也从别人做得好的文档中，学到了一些『奇技淫巧』，所以本文不是对 Markdown 基础语法的介绍，而是一些相对高级、能将 Markdown 玩出更多花样的小技巧。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：如下技巧大多是利用 Markdown 兼容部分 HTML 标签的特性来完成，不一定在所有网站和软件里都完全支持，主要以 GitHub 支持为准。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;在表格单元格里换行&quot;&gt;在表格单元格里换行&lt;/h2&gt;

&lt;p&gt;借助于 HTML 里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 实现。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| Header1 | Header2                          |
|---------|----------------------------------|
| item 1  | 1. one&amp;lt;br /&amp;gt;2. two&amp;lt;br /&amp;gt;3. three |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例效果：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Header1&lt;/th&gt;
      &lt;th&gt;Header2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;item 1&lt;/td&gt;
      &lt;td&gt;1. one&lt;br /&gt;2. two&lt;br /&gt;3. three&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;图文混排&quot;&gt;图文混排&lt;/h2&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签来贴图，然后指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;align&lt;/code&gt; 属性。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot;/&amp;gt;

这是一个示例图片。

图片显示在 N 段文字的右边。

N 与图片高度有关。

刷屏行。

刷屏行。

到这里应该不会受影响了，本行应该延伸到了图片的正下方，所以我要足够长才能确保不同的屏幕下都看到效果。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;示例效果：&lt;/p&gt;

&lt;p&gt;&lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这是一个示例图片。&lt;/p&gt;

&lt;p&gt;图片显示在 N 段文字的右边。&lt;/p&gt;

&lt;p&gt;N 与图片高度有关。&lt;/p&gt;

&lt;p&gt;刷屏行。&lt;/p&gt;

&lt;p&gt;刷屏行。&lt;/p&gt;

&lt;p&gt;到这里应该不会受影响了，本行应该延伸到了图片的正下方，所以我要足够长才能确保不同的屏幕下都看到效果。&lt;/p&gt;

&lt;h2 id=&quot;控制图片大小和位置&quot;&gt;控制图片大小和位置&lt;/h2&gt;

&lt;p&gt;标准的 Markdown 图片标记 &lt;code class=&quot;highlighter-rouge&quot;&gt;![]()&lt;/code&gt; 无法指定图片的大小和位置，只能依赖默认的图片大小，默认居左。&lt;/p&gt;

&lt;p&gt;而有时候源图太大想要缩小一点，或者想将图片居中，就仍需要借助 HTML 的标签来实现了。图片居中可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 标签加 &lt;code class=&quot;highlighter-rouge&quot;&gt;align&lt;/code&gt; 属性来控制，图片宽高则用 &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; 来控制。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**图片默认显示效果：**

![](https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png)

**加以控制后的效果：**

&amp;lt;div align=&quot;center&quot;&amp;gt;&amp;lt;img width=&quot;65&quot; height=&quot;75&quot; src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot;/&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例效果：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图片默认显示效果：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;加以控制后的效果：&lt;/strong&gt;&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img width=&quot;65&quot; height=&quot;75&quot; src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;格式化表格&quot;&gt;格式化表格&lt;/h2&gt;

&lt;p&gt;表格在渲染之后很整洁好看，但是在文件源码里却可能是这样的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|Header1|Header2|
|---|---|
|a|a|
|ab|ab|
|abc|abc|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不知道你能不能忍，反正我是不能忍。&lt;/p&gt;

&lt;p&gt;好在广大网友们的智慧是无穷的，在各种编辑器里为 Markdown 提供了表格格式化功能，比如我使用 Vim 编辑器，就有 &lt;a href=&quot;https://github.com/dhruvasagar/vim-table-mode&quot;&gt;vim-table-mode&lt;/a&gt; 插件，它能帮我自动将表格格式化成这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| Header1 | Header2 |
|---------|---------|
| a       | a       |
| ab      | ab      |
| abc     | abc     |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;是不是看着舒服多了？&lt;/p&gt;

&lt;p&gt;如果你不使用 Vim，也没有关系，比如 Atom 编辑器的 &lt;a href=&quot;https://atom.io/packages/markdown-table-formatter&quot;&gt;markdown-table-formatter&lt;/a&gt; 插件，Sublime Text 3 的 &lt;a href=&quot;https://github.com/bitwiser73/MarkdownTableFormatter&quot;&gt;MarkdownTableFormatter&lt;/a&gt; 等等，都提供了类似的解决方案。&lt;/p&gt;

&lt;h2 id=&quot;使用-emoji&quot;&gt;使用 Emoji&lt;/h2&gt;

&lt;p&gt;这个是 GitHub 对标准 Markdown 标记之外的扩展了，用得好能让文字生动一些。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我和我的小伙伴们都笑了。:smile:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例效果：&lt;/p&gt;

&lt;p&gt;我和我的小伙伴们都笑了。:smile:&lt;/p&gt;

&lt;p&gt;更多可用 Emoji 代码参见 &lt;a href=&quot;https://www.webpagefx.com/tools/emoji-cheat-sheet/&quot;&gt;https://www.webpagefx.com/tools/emoji-cheat-sheet/&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;行首缩进&quot;&gt;行首缩进&lt;/h2&gt;

&lt;p&gt;直接在 Markdown 里用空格和 Tab 键缩进在渲染后会被忽略掉，需要借助 HTML 转义字符在行首添加空格来实现，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;ensp;&lt;/code&gt; 代表半角空格，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;emsp;&lt;/code&gt; 代表全角空格。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;amp;emsp;&amp;amp;emsp;春天来了，又到了万物复苏的季节。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例效果：&lt;/p&gt;

&lt;p&gt;  春天来了，又到了万物复苏的季节。&lt;/p&gt;

&lt;h2 id=&quot;展示数学公式&quot;&gt;展示数学公式&lt;/h2&gt;

&lt;p&gt;如果是在 GitHub Pages，可以参考 &lt;a href=&quot;http://wanguolin.github.io/mathmatics_rending/&quot;&gt;http://wanguolin.github.io/mathmatics_rending/&lt;/a&gt; 使用 MathJax 来优雅地展示数学公式（非图片）。&lt;/p&gt;

&lt;p&gt;如果是在 GitHub 项目的 README 等地方，目前我能找到的方案只能是贴图了，以下是一种比较方便的贴图方案：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在 &lt;a href=&quot;https://www.codecogs.com/latex/eqneditor.php&quot;&gt;https://www.codecogs.com/latex/eqneditor.php&lt;/a&gt; 网页上部的输入框里输入 LaTeX 公式，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;$$x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}$$&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在网页下部拷贝 URL Encoded 的内容，比如以上公式生成的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24&lt;/code&gt;；&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/latex-img.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在文档需要的地方使用以上 URL 贴图，比如&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![](https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;示例效果：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://latex.codecogs.com/png.latex?%24%24x%3D%5Cfrac%7B-b%5Cpm%5Csqrt%7Bb%5E2-4ac%7D%7D%7B2a%7D%24%24&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;任务列表&quot;&gt;任务列表&lt;/h2&gt;

&lt;p&gt;在 GitHub 和 GitLab 等网站，除了可以使用有序列表和无序列表外，还可以使用任务列表，很适合要列出一些清单的场景。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**购物清单**

- [ ] 一次性水杯
- [x] 西瓜
- [ ] 豆浆
- [x] 可口可乐
- [ ] 小茗同学
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例效果：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;购物清单&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] 一次性水杯&lt;/li&gt;
  &lt;li&gt;[x] 西瓜&lt;/li&gt;
  &lt;li&gt;[ ] 豆浆&lt;/li&gt;
  &lt;li&gt;[x] 可口可乐&lt;/li&gt;
  &lt;li&gt;[ ] 小茗同学&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;自动维护目录&quot;&gt;自动维护目录&lt;/h2&gt;

&lt;p&gt;有时候维护一份比较长的文档，希望能够自动根据文档中的标题生成目录（Table of Contents），并且当标题有变化时自动更新目录，能减轻工作量，也不易出错。&lt;/p&gt;

&lt;p&gt;如果你使用 Vim 编辑器，那可以使用我维护的插件 &lt;a href=&quot;https://github.com/mzlogin/vim-markdown-toc&quot;&gt;vim-markdown-toc&lt;/a&gt; 来帮你完美地解决此事：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mzlogin/vim-markdown-toc/master/screenshots/english.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;插件地址：&lt;a href=&quot;https://github.com/mzlogin/vim-markdown-toc&quot;&gt;https://github.com/mzlogin/vim-markdown-toc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果你使用其它编辑器，一般也能找到对应的解决方案，比如 Atom 编辑器的 &lt;a href=&quot;https://atom.io/packages/markdown-toc&quot;&gt;markdown-toc&lt;/a&gt; 插件，Sublime Text 的 &lt;a href=&quot;https://packagecontrol.io/packages/MarkdownTOC&quot;&gt;MarkdownTOC&lt;/a&gt; 插件等。&lt;/p&gt;

&lt;h2 id=&quot;后话&quot;&gt;后话&lt;/h2&gt;

&lt;p&gt;好了，这一波的奇技淫巧就此告一段落，希望大家在了解这些之后能有所收获，更好地排版，专注写作。&lt;/p&gt;

&lt;p&gt;如果你觉得本文对你有帮助，欢迎关注我的微信公众号 isprogrammer，获取更多有帮助的内容。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/matiassingers/awesome-readme/master/readme.md&quot;&gt;https://raw.githubusercontent.com/matiassingers/awesome-readme/master/readme.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com/songpfei/note/247346&quot;&gt;https://www.zybuluo.com/songpfei/note/247346&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">自从几年前开始在 GitHub 玩耍，接触到 Markdown 之后，就一发不可收拾，在各种文档编辑上，有条件用 Markdown 的尽量用，不能用的创造条件也要用——README、博客、公众号、接口文档等等全都是，比如当前这篇文章就是用 Markdown 编辑而成。</summary></entry><entry><title type="html">从一个 NullPointerException 探究 Java 的自动装箱拆箱机制</title><link href="http://localhost:4000/java/2017/08/20/java-auto-boxing-unboxing.html" rel="alternate" type="text/html" title="从一个 NullPointerException 探究 Java 的自动装箱拆箱机制" /><published>2017-08-20T00:00:00+08:00</published><updated>2017-08-20T00:00:00+08:00</updated><id>http://localhost:4000/java/2017/08/20/java-auto-boxing-unboxing</id><content type="html" xml:base="http://localhost:4000/java/2017/08/20/java-auto-boxing-unboxing.html">&lt;p&gt;前天遇到了一个 NullPointerException，触发的代码类似下面这样：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;main 方法里的代码实际上相当于调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;test(null);&lt;/code&gt;，为什么不直接这样写呢？因为编译不过，会报 &lt;code class=&quot;highlighter-rouge&quot;&gt;错误: 不兼容的类型: &amp;lt;空值&amp;gt;无法转换为long&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;抛出问题&quot;&gt;抛出问题&lt;/h2&gt;

&lt;p&gt;运行时提示 &lt;code class=&quot;highlighter-rouge&quot;&gt;test(value);&lt;/code&gt; 这一行抛出 NullPointerException，但是看着以上代码会有些许困惑：以上代码里一个对象方法都没有调用啊，NullPointerException 从何而来？&lt;/p&gt;

&lt;h2 id=&quot;原因分析&quot;&gt;原因分析&lt;/h2&gt;

&lt;p&gt;这时，如果留意到 test 方法接受的参数是 long 类型，而我们传入的是 Long 类型（虽然其实是 null），就会想到这会经历一次从类型 Long 到基本数据类型 long 的自动拆箱过程，那会不会是这个过程中抛出的 NullPointerException 呢？因为以前只知道 Java 为一些基础数据类型与对应的包装器类型之间提供了自动装箱拆箱机制，而并不知这机制的具体实现方法是怎么样的，正好学习一下。&lt;/p&gt;

&lt;p&gt;用命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;javap -c Test&lt;/code&gt; 将以上代码编译出的 Test.class 文件进行反汇编，可以看到如下输出：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test.java&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aload_0&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokespecial&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Object.&quot;&amp;lt;init&amp;gt;&quot;:()V&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lload_0&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lreturn&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aconst_null&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;astore_1&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aload_1&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokevirtual&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Long.longValue:()J&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokestatic&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method test:(J)J&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pop2&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从以上字节码及对应的注释可以看出，&lt;code class=&quot;highlighter-rouge&quot;&gt;test(value);&lt;/code&gt; 这一行被编译后等同于如下代码：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primitive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;longValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;promitive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相比实际代码，多出的 &lt;code class=&quot;highlighter-rouge&quot;&gt;long primitive = value.longValue();&lt;/code&gt; 这一行看起来就是自动拆箱的过程了，而我们传入的 &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; 为 null，&lt;code class=&quot;highlighter-rouge&quot;&gt;value.longValue()&lt;/code&gt; 会抛出 NullPointerException，一切就解释得通了。用更简洁的代码表达出了更丰富的含义，这就是所谓的语法糖了。&lt;/p&gt;

&lt;h2 id=&quot;证实猜想&quot;&gt;证实猜想&lt;/h2&gt;

&lt;p&gt;那么我们上面得出的自动拆箱机制的结论是否正确呢？选择一种其它基本数据类型，比如 int，来佐证一下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primitive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;反汇编后对应的字节码：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test.java&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aload_0&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokespecial&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Object.&quot;&amp;lt;init&amp;gt;&quot;:()V&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bipush&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokestatic&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;astore_1&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aload_1&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokevirtual&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Integer.intValue:()I&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;istore_2&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;由以上字节码我们可以印证下文里的知识点了。&lt;/p&gt;

&lt;h2 id=&quot;自动装箱与拆箱&quot;&gt;自动装箱与拆箱&lt;/h2&gt;

&lt;p&gt;自动装箱与拆箱是 Java 1.5 引入的新特性，是一种语法糖。&lt;/p&gt;

&lt;p&gt;在此之前，我们要创建一个值为 10 的 Integer 对象，只能写作：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而现在，我们可以更方便地写为：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;定义与实现机制&quot;&gt;定义与实现机制&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;自动装箱&lt;/strong&gt;，是指从基本数据类型值到其对应的包装类对象的自动转换。比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;Integer value = 10;&lt;/code&gt;，是通过调用 Integer.valueOf 方法实现转换的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自动拆箱&lt;/strong&gt;，是指从包装类对象到其对应的基本数据类型值的自动转换。比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;int primitive = value;&lt;/code&gt;，是通过调用 Integer.intValue 方法实现转换的。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;基本数据类型&lt;/th&gt;
      &lt;th&gt;包装类型&lt;/th&gt;
      &lt;th&gt;装箱方法&lt;/th&gt;
      &lt;th&gt;拆箱方法&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;boolean&lt;/td&gt;
      &lt;td&gt;Boolean&lt;/td&gt;
      &lt;td&gt;Boolean.valueOf(boolean)&lt;/td&gt;
      &lt;td&gt;Boolean.booleanValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;byte&lt;/td&gt;
      &lt;td&gt;Byte&lt;/td&gt;
      &lt;td&gt;Byte.valueOf(byte)&lt;/td&gt;
      &lt;td&gt;Byte.byteValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;char&lt;/td&gt;
      &lt;td&gt;Character&lt;/td&gt;
      &lt;td&gt;Character.valueOf(char)&lt;/td&gt;
      &lt;td&gt;Character.charValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short&lt;/td&gt;
      &lt;td&gt;Short&lt;/td&gt;
      &lt;td&gt;Short.valueOf(short)&lt;/td&gt;
      &lt;td&gt;Short.shortValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;int&lt;/td&gt;
      &lt;td&gt;Integer&lt;/td&gt;
      &lt;td&gt;Integer.valueOf(int)&lt;/td&gt;
      &lt;td&gt;Integer.intValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;long&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;Long.valueOf(long)&lt;/td&gt;
      &lt;td&gt;Long.longValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;Float&lt;/td&gt;
      &lt;td&gt;Float.valueOf(float)&lt;/td&gt;
      &lt;td&gt;Float.floatValue()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;double&lt;/td&gt;
      &lt;td&gt;Double&lt;/td&gt;
      &lt;td&gt;Double.valueOf(double)&lt;/td&gt;
      &lt;td&gt;Double.doubleValue()&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;发生时机&quot;&gt;发生时机&lt;/h3&gt;

&lt;p&gt;自动装箱与拆箱主要发生在以下四种时机：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;赋值时；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;比较时；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;算术运算时；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;方法调用时。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;常见应用场景&quot;&gt;常见应用场景&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Case 1:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动装箱（赋值时）&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primitive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（方法调用时）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Case 2:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（比较时）&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Case 3:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动装箱（方法调用时）&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（赋值时）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：集合（Collections）里不能直接放入原始类型，集合只接收对象。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Case 4:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动装箱（方法调用时）&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（赋值时）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：ThreadLocal 不能存储基本数据类型，只接收引用类型。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Case 5:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fun1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fun2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fun1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动装箱（方法调用时）&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fun2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（方法调用时）&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Case 6:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（算术运算时）&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱（算术运算时）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;相关知识点&quot;&gt;相关知识点&lt;/h3&gt;

&lt;h4 id=&quot;比较&quot;&gt;比较&lt;/h4&gt;

&lt;p&gt;除 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 以外，包装类对象与基本数据类型值的比较，包装类对象与包装类对象之间的比较，都是自动拆箱后对基本数据类型值进行比较，所以，&lt;strong&gt;要注意这些类型间进行比较时自动拆箱可能引发的 NullPointerException&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 比较特殊，因为可以用于判断左右是否为同一对象，所以两个包装类对象之间 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;，会用于判断是否为同一对象，而不会进行自动拆箱操作；包装类对象与基本数据类型值之间 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;，会自动拆箱。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 不拆箱&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 自动拆箱&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;缓存&quot;&gt;缓存&lt;/h4&gt;

&lt;p&gt;Java 为整型值包装类 Byte、Character、Short、Integer、Long 设置了缓存，用于存储一定范围内的值，详细如下：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;缓存值范围&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Byte&lt;/td&gt;
      &lt;td&gt;-128 ~ 127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Character&lt;/td&gt;
      &lt;td&gt;0 ~ 127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Short&lt;/td&gt;
      &lt;td&gt;-128 ~ 127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Integer&lt;/td&gt;
      &lt;td&gt;-128 ~ 127（可配置）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;-128 ~ 127&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;在一些情况下，比如自动装箱时，如果值在缓存值范围内，将不创建新对象，直接从缓存里取出对象返回，比如：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;缓存实现机制：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这里使用了设计模式享元模式。&lt;/p&gt;

&lt;p&gt;以 Short 类实现源码为例：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Short&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShortCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShortCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[-(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Short&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sAsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sAsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sAsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// must cache&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShortCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sAsInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在第一次调用到 &lt;code class=&quot;highlighter-rouge&quot;&gt;Short.valueOf(short)&lt;/code&gt; 方法时，将创建 -128 ~ 127 对应的 256 个对象缓存到堆内存里。&lt;/p&gt;

&lt;p&gt;这种设计，在频繁用到这个范围内的值的时候效率较高，可以避免重复创建和回收对象，否则有可能闲置较多对象在内存中。&lt;/p&gt;

&lt;h4 id=&quot;使用不当的情况&quot;&gt;使用不当的情况&lt;/h4&gt;

&lt;p&gt;自动装箱和拆箱这种语法糖为我们写代码带来了简洁和便利，但如果使用不当，也有可能带来负面影响。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;性能的损耗&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 1. 先对 sum 进行自动拆箱&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 2. 加法&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 3. 自动装箱赋值给 sum，无法命中缓存，会 new Integer(int)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;在循环过程中会分别调用 4000 次 Integer.intValue() 和 Integer.valueOf(int)，并 new 4000 个 Integer 对象，而这些操作将 sum 的类型改为 int 即可避免，节约运行时间和空间，提升性能。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;java.lang.NullPointerException&lt;/p&gt;

    &lt;p&gt;尝试对一个值为 null 的包装类对象进行自动拆箱，就有可能造成 NullPointerException。&lt;/p&gt;

    &lt;p&gt;比如：&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NullPointerException&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NullPointerException&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NullPointerException&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;还有一种更隐蔽的情形，感谢 &lt;a href=&quot;https://www.zhihu.com/people/zhou-shao-68-55&quot;&gt;@周少&lt;/a&gt; 补充：&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NullPointerException&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这实际上还是对一个值为 null 的 Long 类型进行自动拆箱，反汇编代码：&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test.java&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aload_0&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokespecial&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Object.&quot;&amp;lt;init&amp;gt;&quot;:()V&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;Code:&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aconst_null&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkcast&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// class java/lang/Long&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invokevirtual&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// Method java/lang/Long.longValue:()J&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lstore_1&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://droidyue.com/blog/2015/04/07/autoboxing-and-autounboxing-in-java/index.html&quot;&gt;Java中的自动装箱与拆箱&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/dolphin0520/p/3780005.html&quot;&gt;深入剖析Java中的装箱和拆箱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">前天遇到了一个 NullPointerException，触发的代码类似下面这样：</summary></entry><entry><title type="html">我做了一个有点艰难的决定</title><link href="http://localhost:4000/blog/2017/04/09/a-difficult-decision.html" rel="alternate" type="text/html" title="我做了一个有点艰难的决定" /><published>2017-04-09T00:00:00+08:00</published><updated>2017-04-09T00:00:00+08:00</updated><id>http://localhost:4000/blog/2017/04/09/a-difficult-decision</id><content type="html" xml:base="http://localhost:4000/blog/2017/04/09/a-difficult-decision.html">&lt;p&gt;我做了一个有点艰难的决定，离开帝都，回到了武汉工作和生活。&lt;/p&gt;

&lt;p&gt;这让我想起近几年在各种新闻流标题里经常看到的两种说法，“逃离北上广”和“逃回北上广”，既然是逃，自然便是有什么东西在后面追，或者是高房价，或者是职业前景，或者是生活压力。回首我自己的决策过程，虽然也像现在好多年轻人一样处在“留不下的城市，回不去的故乡”的尴尬境地里，有一些无奈的成分，庆幸的是选择的成分相对还是更多一点。&lt;/p&gt;

&lt;p&gt;身处北京时，常有一种莫名的“临时感”，总感觉生活里的很多东西都是临时不可长久持续的：房子是租来的，不想花钱和精力去提升它的舒适度；工作和同事们很给力，但不知道什么时候会中断，离开；想进行一些学习与深造，会考虑周期那么长，会不会无法在北京待到学完的时候？后来我明白了，这就是一个心态的问题，总认为生活不在北京，在未来的某个地方。想起多年前非常火的一个词，北漂，在北京的这些年头里从来没把自己跟这个词联系起来，但实际上我就是北漂，身漂心也漂。&lt;/p&gt;

&lt;p&gt;我曾经跟小别同学讲说，有时候加个班回家晚，在路上听到《北京北京》鼻子会有点酸，她表示无法理解这种感受。其实早些年我也不会，也许是我老了。&lt;/p&gt;

&lt;p&gt;即使心里非常清楚这样一个决定会给生活带来颠覆式的变化，我也还是比较匆忙地结束了在北京的一切，匆忙地做了工作交接，匆忙地与朋友们告别，约或者不约，故意推迟周知朋友们的时间，因为怕过渡期时间久会引得自己惆怅和伤感，但这些又如何避免得了呢。&lt;/p&gt;

&lt;p&gt;我知道我从此放弃了一些东西，我将逐渐淡出几年里融入的圈子，跟好些朋友也许从此不会再见。&lt;/p&gt;

&lt;p&gt;我也知道我将收获很多新的东西，认识很多不同的人，见到很多不一样的风景。我有点失落，但并不慌张，我告诉自己牢记一点：每当迷失方向，想想曾经艰难地放弃过什么。&lt;/p&gt;

&lt;p&gt;在纠结惆怅的日子里，我曾经一度以为我要放弃的还有梦想，但后来想通了，不是只有北上广才能承载梦想，与我爱的人一起幸福平静地生活，我正奔着这个梦想而去。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;何必寻找所谓的天堂&lt;/p&gt;

  &lt;p&gt;原来我 因为你&lt;/p&gt;

  &lt;p&gt;不想再去流浪&lt;/p&gt;

  &lt;p&gt;情愿平凡 不拥有一切也无妨&lt;/p&gt;

  &lt;p&gt;有了你 在心上&lt;/p&gt;

  &lt;p&gt;已然是天堂&lt;/p&gt;

  &lt;p&gt;— 光良《天堂》&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">我做了一个有点艰难的决定，离开帝都，回到了武汉工作和生活。</summary></entry><entry><title type="html">读书：追风筝的人</title><link href="http://localhost:4000/blog/2017/02/19/the-kite-runner.html" rel="alternate" type="text/html" title="读书：追风筝的人" /><published>2017-02-19T00:00:00+08:00</published><updated>2017-02-19T00:00:00+08:00</updated><id>http://localhost:4000/blog/2017/02/19/the-kite-runner</id><content type="html" xml:base="http://localhost:4000/blog/2017/02/19/the-kite-runner.html">&lt;blockquote&gt;
  &lt;p&gt;《追风筝的人》确实是一部相当优秀而又深刻的作品。——小别老师&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/the-kite-runner.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图 1. 《追风筝的人》/卡勒德.胡赛尼 封面&lt;/p&gt;

&lt;p&gt;当在我用一整个下午读完这本书，印象最深的句子是下面这两个：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;那儿有再次成为好人的路。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;为你，千千万万遍。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样的句子翻译之后总觉得少了点意思，感受下原文：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is a way to be good again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;For you, a thousand times over.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;就是这两个简单的句子，承载了故事的主要线索——自我救赎与献身。&lt;/p&gt;

&lt;h2 id=&quot;剧透&quot;&gt;剧透&lt;/h2&gt;

&lt;p&gt;小说其实讲述了一个非常简单的故事：&lt;/p&gt;

&lt;p&gt;一心只想讨父亲欢心的少爷阿米尔与他忠诚的仆人哈桑从小一起长大，哈桑总是为阿米尔背锅，还在危急关头为他挺身而出，但是在哈桑被反社会分子逼到巷角时，阿米尔却眼睁睁地看着强暴发生，什么都没有做。&lt;/p&gt;

&lt;p&gt;阿米尔后来无法承受对自己懦弱的自责所带来的痛苦，就设计逼走了哈桑。随后阿富汗发生战乱，阿米尔随父亲逃到美国讨生活，有了美丽的妻子和体面的职业，过上了岁月静好的生活。&lt;/p&gt;

&lt;p&gt;但是多年以后，父亲旧时好友告诉了他一个惊天秘密：原来哈桑是他同父异母的弟弟。虽然被一直以来形象正面的父亲蒙蔽多年给心灵带来的冲击巨大，但为了救赎自己少年时的背叛，他还是冒着生命危险去营救弟弟唯一的骨肉，最后果然有了生命危险，他也为自己多年前的「罪行」受到了「惩罚」，完成了自我救赎。一番波折之后，带着弟弟的骨肉回到了美国。&lt;/p&gt;

&lt;h2 id=&quot;笔记&quot;&gt;笔记&lt;/h2&gt;

&lt;h3 id=&quot;整体评价&quot;&gt;整体评价&lt;/h3&gt;

&lt;p&gt;对于我这样的俗人来说，一部小说或者讲故事的电影优秀与否其实很好判断：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;看完之后能否比较容易地复述整个故事。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不为了制造戏剧冲突而夸大其词，造成情节和情感脱线。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;能让人在听故事之余，在人性或亲情等方面产生更深刻的认识。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;从这几点来讲，《追风筝的人》都不失为一部好作品。&lt;/p&gt;

&lt;p&gt;下面分几个方面来记录一下我个人的理解：&lt;/p&gt;

&lt;h3 id=&quot;哈桑&quot;&gt;哈桑&lt;/h3&gt;

&lt;p&gt;哈桑是忠诚的，一辈子都在「献身」，但他却因此成为故事里悲剧部分的主要载体。&lt;/p&gt;

&lt;p&gt;少爷出主意恶作剧时，他负责背锅；少爷受欺负时，他负责挡枪；自己遭受暴行时，少爷袖手旁观，但他却依然不变初心；少爷想要激怒他来减轻自己的负罪感时，默默承受；少爷栽赃给他时，波澜不惊地应承下来；直至最后，都是为了守护少爷的房子而死。&lt;/p&gt;

&lt;p&gt;他让我想起我们小学时接受思想品德教育时，「舍己为人」、「先人后己」和「毫不利己，专门利人」这些词汇，我们可以逐步跳脱出来，而身处那个环境的哈桑——少爷说，「哈桑从未拒绝我任何事情」。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;但在你为他献身之前，你想过吗？他会为你献身吗？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;他对少爷怀着的是一种我无法理解的感情。&lt;/p&gt;

&lt;h3 id=&quot;父亲&quot;&gt;父亲&lt;/h3&gt;

&lt;p&gt;在大部分时候，他是一个令人敬佩的形象。&lt;/p&gt;

&lt;p&gt;他乐善好施，不屈从世俗与宗教，选择自己认为对的路，并且将生活经营得有声有色；他心怀高尚的情操，面对俄国士兵的枪杆也毫不退缩，靠自己赢得所有人的尊敬；即使逃到美国，也只靠自己双手劳作，拒绝靠政府的救济来生存。&lt;/p&gt;

&lt;p&gt;他对世间罪行的概括：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;罪行只有一种，那就是盗窃，其它罪行都是盗窃的变种。当你杀害一个人，你偷走一条性命，你偷走他妻子身为人妇的权利，夺走他子女的父亲。当你说谎，你偷走别人知道真相的权利。当你诈骗，你偷走公平的权利。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在阅读他的事迹的时候，我常在想，原来这样的人，真的存在。&lt;/p&gt;

&lt;p&gt;他这一生也许只做过一件羞耻的错事，那就是给阿米尔带来了一个同父异母的兄弟。所以当我看到这一点，受到的冲击是巨大的，可以想见阿米尔为何会因此而崩溃。&lt;/p&gt;

&lt;p&gt;他展现在大伙面前的正面的神迹般的一生，也是对这唯一一件错事的自我救赎。&lt;/p&gt;

&lt;h3 id=&quot;阿米尔&quot;&gt;阿米尔&lt;/h3&gt;

&lt;p&gt;故事的绝对主线，一个懦弱的孩子，要不是在父亲，哈桑，和好些其它人的保护之下，我很怀疑他能顺利长大。小时候的他，身上充斥着各种他自己的察觉或未察觉的阴暗面。&lt;/p&gt;

&lt;p&gt;他与哈桑的一段对话让我印象深刻：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;「我骗过你吗，阿米尔少爷？」&lt;/p&gt;

  &lt;p&gt;「我不知道，你会骗我吗？」&lt;/p&gt;

  &lt;p&gt;「我宁愿吃泥巴也不会骗你。」&lt;/p&gt;

  &lt;p&gt;「真的吗？你会那样做？」&lt;/p&gt;

  &lt;p&gt;「做什么？」&lt;/p&gt;

  &lt;p&gt;「如果我让你吃泥巴，你会吃吗？」&lt;/p&gt;

  &lt;p&gt;「如果你要求，我会的。不过我怀疑，你是否会让我那么做。你会吗，阿米尔少爷？」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;阿塞夫是反社会，但是他对阿米尔的总结却也并不见得有多偏颇：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么他跟客人玩总不喊上你？为什么他总是在没有人的时候才理睬你？我告诉你为什么，哈扎拉人。因为对他来说，你什么都不是，只是一只丑陋的宠物。一种他无聊的时候可以玩的东西，一种他发怒的时候可以踢开的东西。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;阿米尔小时候拼命想得到父亲的认可与亲近，而哈桑却在不经意间就能获得，所以一定程度上讲，他是嫉妒哈桑的。&lt;/p&gt;

&lt;p&gt;他了解哈桑对自己的感情与忠诚，并且利用和背叛了它，却又受自己的良心煎熬，毕竟「一直以来，你对自己太严苛了」，所以在二十五年后，冒着生命危险也要回到故乡去带回索拉博，名义上是援救这个孩子，实际只为了完成那一场自我救赎。只是与他受人尊敬坚毅果敢的父亲不同，他的这场救赎来得实在太晚。&lt;/p&gt;

&lt;h3 id=&quot;阿富汗&quot;&gt;阿富汗&lt;/h3&gt;

&lt;p&gt;这个国度以前在我的印象里真的只有连年战乱，塔利班，火箭弹。&lt;/p&gt;

&lt;p&gt;现在，脑海里对它的曾经的样子，经历的历史进程，国民遭受的苦难有了更具象的刻画，也许有一天，我会去查更多关于它的资料，只为理解这个世界上真的有这样一个地方，它的人民真的生活在这样的环境里，而它曾经孕育过一代又一代能快乐地追风筝的少年。&lt;/p&gt;

&lt;p&gt;作者胡赛尼「立志拂去蒙在阿富汗普通民众面孔的尘灰，将背后灵魂的悸动展示给世人」，从某种意义上讲，他实现了这个志向。&lt;/p&gt;

&lt;h3 id=&quot;同名电影&quot;&gt;同名电影&lt;/h3&gt;

&lt;p&gt;在 2017 贺岁档电影里，我唯一觉得还不错的《乘风破浪》（豆瓣 7.0 分），之所以广受好评，主要也是因为第一点做得比较好，完整地讲述了一个简单的故事，让人知所云，这本来应该是一部电影的基本素质，但是它做到这一点，却已比如今一众故弄玄虚总想搞个大新闻的烂片不知道高到哪里去了。&lt;/p&gt;

&lt;p&gt;而本书的同名电影在豆瓣上评分高达了 8.2 分，可见也很值得一看。但我的体会是在阅读本书的过程中，脑海里能根据作者的讲述不断脑补起各种场景、人物和剧情，所以不建议看完本书之后立即去看电影——脑海里刚刚放映过包含各种细节和微妙之处的完整版，马上接着去看有删节有改编版，难免会失落。&lt;/p&gt;

&lt;h2 id=&quot;感受&quot;&gt;感受&lt;/h2&gt;

&lt;p&gt;一个好的故事，应该连续地读完，及时记下所感所想。&lt;/p&gt;

&lt;p&gt;虽然我不擅长写读书笔记、读后感，但是输入之后有输出真的是一个能让自己受益良多的好习惯。不顾忌那么多，先写下来，然后对记录的模板、方式和内容进行迭代。&lt;/p&gt;

&lt;p&gt;希望本篇成为一个良好的开端。&lt;/p&gt;</content><author><name></name></author><summary type="html">《追风筝的人》确实是一部相当优秀而又深刻的作品。——小别老师</summary></entry><entry><title type="html">我的 2016 盘点</title><link href="http://localhost:4000/blog/2017/01/01/my-2016.html" rel="alternate" type="text/html" title="我的 2016 盘点" /><published>2017-01-01T00:00:00+08:00</published><updated>2017-01-01T00:00:00+08:00</updated><id>http://localhost:4000/blog/2017/01/01/my-2016</id><content type="html" xml:base="http://localhost:4000/blog/2017/01/01/my-2016.html">&lt;p&gt;总结是为了更好地再上路。&lt;/p&gt;

&lt;p&gt;在我人生的前二十几年是没有做年度计划和总结的习惯的，但在 2015-12-31 时和饭团团员们心血来潮一起做了个 2016 PLAN，现在 2016 已经被完整地甩在身后，是时候回顾以明得失，展望以知进退了。&lt;/p&gt;

&lt;p&gt;如果用一句话来概括，这一年是玩得不错，学得不咋样；展开来讲的话，按传统得欲扬先抑，先把批评做在前头，上成绩单：&lt;/p&gt;

&lt;h2 id=&quot;成绩单&quot;&gt;成绩单&lt;/h2&gt;

&lt;p&gt;当时制定的计划一共 16 项，现状如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/2016-plan-progress.png&quot; alt=&quot;2016 Plan Progress&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自评&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;惨，不及格。&lt;/p&gt;

&lt;p&gt;当然我的过去就是我存在的基石，一味地全盘否定并不能改变什么，需要认可我自己的是清单里可能最难、但对我提升最大的两项任务完成了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;反思&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我对跨度较大的计划的把控能力略差，做这件事情需要的能力跟项目管理很类似，都还需要我有意识地花大力气去培养。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;目标的约束力&lt;/p&gt;

    &lt;p&gt;引用最有故事的女同学曲玮玮的话说：&lt;strong&gt;真正的目标是清晰明确的、有时间约束的、可操作执行并且可以检验的&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;我在制定计划时存在一个很大的问题是没有给任务加上时间约束，而在一年这样一个相对很长的时间跨度里，没有时间约束的目标很容易被无限押后，并最终导致计划的流产。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;计划的迭代&lt;/p&gt;

    &lt;p&gt;在一个计划周期里，处境，心态，都可能发生了天翻地覆的变化，想要做的事情也可能需要随之调整，保持对计划清单的关注，确保留在清单里的仍然是你最想完成的事项。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;执行力&lt;/p&gt;

    &lt;p&gt;候捷老师说，天下大事，必作于细。&lt;/p&gt;

    &lt;p&gt;小别老师说，&lt;strong&gt;「做事情抓重点」+「执行力」&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;我对自己说，想明白最重要的里面最想做的，迈出第一步，少年莫踌躇。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;有形的记录&quot;&gt;有形的记录&lt;/h2&gt;

&lt;h3 id=&quot;阅读和影音娱乐&quot;&gt;阅读和影音娱乐&lt;/h3&gt;

&lt;p&gt;数据主要来自豆瓣上的记录。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/books-and-movies.png&quot; alt=&quot;Books and Movies&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用一句网络流行语来说，努力了可能没什么卵用，但不努力真的很舒服啊。:sob:&lt;/p&gt;

&lt;p&gt;从数字上看，我这一年过得没有之前努力了，花在书籍上的时间与影音方面的时间此消彼长，特别是技术类书籍的阅读少了很多，这都是需要注意的地方。&lt;/p&gt;

&lt;h3 id=&quot;网络活动&quot;&gt;网络活动&lt;/h3&gt;

&lt;h4 id=&quot;github&quot;&gt;GitHub&lt;/h4&gt;

&lt;p&gt;贡献日历：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/github-contributions-2016.png&quot; alt=&quot;GitHub Contributions 2016&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;过去一年总共有 935 次 Commits/Issues/PR，相比 2015 年的 765 次小幅提升；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最长连击记录是 28 天，是 2015-12-31 到 2016-01-27；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每一周都活跃。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相较于活跃的数字来讲，过去一年里值得一提的个人项目主要是下面这三个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/mzlogin/awesome-adb&quot;&gt;awesome-adb&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;目前网络上能找到的最完善的 ADB 用法大全。&lt;/p&gt;

    &lt;p&gt;它在 GitHub 的 Trending 上待了几天，最高 Repositories 排名第 4，最高 Developers 排名第 6，目前 Star 数过 2000。我至今仍记得上 Trending 的第一天我激动地与 Linus 合影留恋时的心情。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/mzlogin/vim-markdown-toc&quot;&gt;vim-markdown-toc&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;一款 Vim 插件，主要功能是为 Markdown 文档自动生成和维护 Table of Contents。&lt;/p&gt;

    &lt;p&gt;Star 数不到百，但每天都有人 clone，Vim 必备插件 nerdtree 的作者 &lt;a href=&quot;https://github.com/scrooloose&quot;&gt;scrooloose&lt;/a&gt; 还来提过 Issue 和 PR，让我体会到与传说中的人交流的感受。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/mzlogin/chinese-copywriting-guidelines&quot;&gt;chinese-copywriting-guidelines&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;中文文案排版指北（简体中文版）。&lt;/p&gt;

    &lt;p&gt;这是一个 Fork 项目，却也是第一个让我尝到 Star 数破百的滋味的项目，感谢它。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;得与失：&lt;/p&gt;

&lt;p&gt;参与和维护开源项目是一件很有意思的事情，可能让你接触到久仰的大神，也可能占用你很多的时间，可以从中学到多人协作的方式与智慧，也可能让你在连击与 Star 里迷失。起初最盼望的是自己的项目有人关注，这样的时刻真正来临之后你就会发现身上多了许多责任，解答网友们与项目相关的问题义不容辞，及时响应对维持热度必不可少。&lt;/p&gt;

&lt;p&gt;在这方面的付出与收获自己觉得还比较满意，以后会继续保持活跃，而且要活跃得更有质量，更有效率。&lt;/p&gt;

&lt;p&gt;需要引起重视的地方是作为一名 Android 开发者，没有一个长期维护的相关代表作，这是严重的失误。&lt;/p&gt;

&lt;h4 id=&quot;技术社区&quot;&gt;技术社区&lt;/h4&gt;

&lt;p&gt;这一年里我成为了掘金联合编辑、极乐知乎专栏原创作者，在掘金分享和发布了 11 篇文章，收获了 1388 个收藏，在极乐知乎专栏发布 1 篇文章，收获 80 个赞和 60 名粉丝。&lt;/p&gt;

&lt;p&gt;在它们的原创作者群里可以接触到很多业界知名的开发者和很厉害的小朋友们，他们也跟大家一样嬉笑怒骂，但又明摆着实力碾压，无形中带来很多的压力和激励。&lt;/p&gt;

&lt;h4 id=&quot;博客&quot;&gt;博客&lt;/h4&gt;

&lt;p&gt;这一年在个人博客上共发表 17 篇文章，大致上半年每月 2 篇，下半年每月 1 篇的节奏。&lt;/p&gt;

&lt;p&gt;以后可以再多写一点。我比较满意自己的一点是近两年我对学过的东西和遇到过的问题在 OneNote 上都作了详细的分类记录，而这些笔记趁热乎的成篇发布出来对整理思路和加深理解都是有益的，毕竟你能清楚地讲解给别人听，才算是真懂了。&lt;/p&gt;

&lt;h3 id=&quot;运动&quot;&gt;运动&lt;/h3&gt;

&lt;p&gt;过去一年的运动记录主要分布在羽毛球、跑步、瑜伽和网球上。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;羽毛球&lt;/p&gt;

    &lt;p&gt;参加公司羽毛球俱乐部活动 20 次，集团俱乐部活动几次，搜狐联赛 1 次。技术上进步不大，抽空看完了李在福的《追球》系列，周末偶尔参加回龙观的情怀羽毛球俱乐部的活动。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跑步&lt;/p&gt;

    &lt;p&gt;参加公司跑团活动 15 次，和小伙伴们约跑以及自己练习若干次，收获了两枚半程马拉松奖牌和很多好友。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/blog/marathon-2016.jpeg&quot; alt=&quot;Marathon&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;瑜伽&lt;/p&gt;

    &lt;p&gt;参加集团俱乐部活动几次，身体僵硬，练习完很放松，很久没去了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网球&lt;/p&gt;

    &lt;p&gt;参加公司网球俱乐部活动 15 次，入门菜鸡选手，到处捡球，很久没打了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;工作&quot;&gt;工作&lt;/h3&gt;

&lt;p&gt;占据绝大多数时间的工作，在这一年里只能说中规中矩，却也实现了升职加薪的愿望。&lt;/p&gt;

&lt;p&gt;继续从事 Android 开发，因工作需要也接手了一些 PHP 后台代码维护，踩过很多坑，改过很多 Bug，个人能力的提升并不能令自己满意。&lt;/p&gt;

&lt;p&gt;一方面深感自己在技术上缺乏深度，另一方面也因职业发展焦虑而迫切想要进一步提升在实际编码层次之上的架构规划与设计能力。试着去阅读更多优秀的源码，也试着让自己在接手任务之后将更多的时间用于设计，更多地画图、做笔记来捋清和记录自己的想法，确保自己的编码过程中是思路清晰的。蜕变的过程是辛苦的，但这一步别人只能提供一些建议，更多的还得靠自己去学习和思考。&lt;/p&gt;

&lt;p&gt;制订一个清晰合理的职业规划来指引自己前行是必要的，否则可能看上去很努力，实际也做了很多事情，但两点之间直线最短，有明确的目标你才能笔直前进。&lt;/p&gt;

&lt;h3 id=&quot;游戏&quot;&gt;游戏&lt;/h3&gt;

&lt;p&gt;今年游戏玩得比去年多，主要是手游《皇室战争》和《阴阴师》，在业余时间里它们能让我暂时摆脱焦虑与烦恼，专注于一个小屏幕里，去发掘和操作一些套路，尽管那也许就是游戏策划们设计好的套路。&lt;/p&gt;

&lt;p&gt;另外，和李小昂同学合作使用网易的自动化测试框架写网易游戏的自动化脚本也挺有意思。&lt;/p&gt;

&lt;p&gt;昨天我卸载了《阴阳师》，从中节省出来的时间我想干一点更有意思的事情，目前还没有想好，欢迎推荐。&lt;/p&gt;

&lt;h3 id=&quot;旅行&quot;&gt;旅行&lt;/h3&gt;

&lt;p&gt;由于异地装修，这一年里稍长一点的假期基本奔波于帝都和武汉之间，能称得上旅行的只有和范师傅周大神一起的大五朝台了。&lt;/p&gt;

&lt;p&gt;两天步行五十多公里，单日计步超过五万，在徒步过程中数次想放弃然而最终坚持下来，第一次在寺庙挂单，这些都深深地印在脑海里。&lt;/p&gt;

&lt;h2 id=&quot;无形的收获&quot;&gt;无形的收获&lt;/h2&gt;

&lt;p&gt;除了上述的这些，我还收获了一些看不见摸不着，但是也实实在在的东西。&lt;/p&gt;

&lt;p&gt;一是和小别同学在经历了无数的争吵后达成的共识越来越多，求同存异中也多了许多体谅与包容。&lt;/p&gt;

&lt;p&gt;二是在参加各种运动的过程中收获了许多好友，让我得以在工作之外感受更多生活的精彩。&lt;/p&gt;

&lt;h2 id=&quot;展望&quot;&gt;展望&lt;/h2&gt;

&lt;p&gt;参加工作六年有余，近一两年日益焦虑，猜想大致与若干年后将体会到的中年危机类似，唯不断的思考和努力方可突破。&lt;/p&gt;

&lt;p&gt;在接下来的日子里，我期望自己有：&lt;/p&gt;

&lt;p&gt;更多的思考，虽然 done is better than perfect；&lt;/p&gt;

&lt;p&gt;更多的阅读，特别是 the fucking source code；&lt;/p&gt;

&lt;p&gt;更多的交流，训练简洁的表达能联动促进思维更敏捷；&lt;/p&gt;

&lt;p&gt;更少的焦虑，想清楚，笃定前行；&lt;/p&gt;

&lt;p&gt;一个家。&lt;/p&gt;

&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;

&lt;p&gt;最后要感谢亲人朋友们一如既往的支持，感谢领导和同事们的爱护与帮助，引用最近认识的超厉害的 &lt;a href=&quot;http://blog.csdn.net/u010850027&quot;&gt;小故事&lt;/a&gt; 的年终总结标题与大家共勉：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;你只管努力，剩下的交给时光。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;祝大家新年快乐！&lt;/p&gt;</content><author><name></name></author><summary type="html">总结是为了更好地再上路。</summary></entry><entry><title type="html">搭建大型源码阅读环境——使用 OpenGrok</title><link href="http://localhost:4000/tools/2016/12/14/rtfsc-with-opengrok.html" rel="alternate" type="text/html" title="搭建大型源码阅读环境——使用 OpenGrok" /><published>2016-12-14T00:00:00+08:00</published><updated>2016-12-14T00:00:00+08:00</updated><id>http://localhost:4000/tools/2016/12/14/rtfsc-with-opengrok</id><content type="html" xml:base="http://localhost:4000/tools/2016/12/14/rtfsc-with-opengrok.html">&lt;p&gt;RTFSC 是程序员打怪升级路上避不开的功课，那营造一个舒适的环境来提升上课的体验就很有必要了。&lt;/p&gt;

&lt;p&gt;比如阅读 AOSP 这种大型源码，用什么姿势来阅读才能丝般顺滑，让 F**king Source Code 也变得不那么可恶呢？&lt;/p&gt;

&lt;h2 id=&quot;工具的选择&quot;&gt;工具的选择&lt;/h2&gt;

&lt;p&gt;阅读源码的工具我尝试过以下几类：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;IDE&lt;/p&gt;

    &lt;p&gt;在看特定类型项目时这是我的首选。比如它原本就是一个 Visual Studio 工程，那当然用 Visual Studio 来打开阅读，看 Android App 或者 Library 源码当然用 Android Studio 体验更好。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编辑器配合插件&lt;/p&gt;

    &lt;p&gt;比如 Vim + Ctags + Cscope，再配合文件模糊查找插件 LeaderF 和神器 YouCompleteMe，在源码规模不大时很方便，打开也轻快，阅读一些小项目时我还是乐意使用它们。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;专门的源码阅读工具&lt;/p&gt;

    &lt;p&gt;在针对特大型源码时，比如 AOSP 和 Chromium，使用上述两种方案可能会感觉乏力，这时候就需要祭出专门的源码阅读工具了。&lt;/p&gt;

    &lt;p&gt;一类是商业软件，比如 Windows 下有著名的 Source Insight，跨平台的有 Understand，功能都很强大，都是不错的选择。当然它们都价格不菲。&lt;/p&gt;

    &lt;p&gt;而我这里要讲的主角 OpenGrok 属于另一类，免费，开源，运行流畅，功能也毫不逊色。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你还在寻觅适合你自己的解决方案，大可以花一点时间将以上几种都尝试一遍，哪个称手用哪个，也可以像我一样，针对不同的项目使用不同的工具。想直观了解 OpenGrok 的同学可以直接先看看一些使用 OpenGrok 的在线源码查看网站，看看它能否满足你的需求，其中的一些列在 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/OpenGrok-installations&quot;&gt;OpenGrok installations&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;opengrok-特性&quot;&gt;OpenGrok 特性&lt;/h2&gt;

&lt;p&gt;译自官方 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Features&quot;&gt;Wiki&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;OpenGrok 提供如下特性：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;快速搜索代码的引擎&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;搜索全文、定义、符号、文件路径和修改历史&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;搜索任意指定子目录（分层搜索）&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;增量更新索引文件&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;支持类似 Google 的查询语法，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;path:Makefile defs:target&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;搜索日期范围内修改的文件&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;支持使用通配符搜索，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 表示多个字符，&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 表示单个字符&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在搜索结果中展示匹配行&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一个 Web 只读版的版本历史查看界面&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;文件的修改日志&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;文件在两个版本间的 diff&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;文件夹的历史记录&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;带语法高亮的交叉引用显示，可以使用 CSS 自定义样式&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可以开发插件支持新的语言和版本控制系统&lt;/p&gt;

    &lt;p&gt;已经支持的语言： &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Supported-Languages-and-Formats&quot;&gt;Supported Languages and Formats&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;已经支持的版本控制系统：&lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Supported-Revision-Control-Systems&quot;&gt;Supported Revision Control Systems&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;配置-opengrok&quot;&gt;配置 OpenGrok&lt;/h2&gt;

&lt;h3 id=&quot;截屏&quot;&gt;截屏&lt;/h3&gt;

&lt;p&gt;按惯例先上图吧，万一你一眼就发现不是你的菜呢（截图来自&lt;a href=&quot;https://opengrok.github.io/OpenGrok/&quot;&gt;官网&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;搜索功能和源码树：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tools/opengrok-scr1.png&quot; alt=&quot;OpenGrok Search and Browse&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码导航和版本历史记录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tools/opengrok-scr2.png&quot; alt=&quot;OpenGrok Navitation and History&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装和配置&quot;&gt;安装和配置&lt;/h3&gt;

&lt;p&gt;如下以 Windows 下为例，Mac OS X 与 Linux 下与此类似，很多步骤能使用 brew 或者 apt-get 会更方便。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装 &lt;a href=&quot;http://www.oracle.com/technetwork/java/&quot;&gt;JDK&lt;/a&gt;，并配置 JAVA_HOME 或者 JRE_HOME 环境变量为安装目录。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;http://tomcat.apache.org/&quot;&gt;Tomcat&lt;/a&gt;，解压到一个目录，如 D:\Programs\apache-tomcat-8.5.8，并将此目录添加为 CATALINA_HOME 环境变量。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/posts/tools/catalina-home.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;https://github.com/universal-ctags/ctags&quot;&gt;Universal Ctags&lt;/a&gt; for Windows，将 ctags.exe 文件所在目录添加到 PATH 环境变量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/releases&quot;&gt;OpenGrok&lt;/a&gt; 的最新包，比如 opengrok-0.13-rc4.zip，解压到一个目录，如 D:\Programs\opengrok-0.13-rc4。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置 data root。&lt;/p&gt;

    &lt;p&gt;data root 用于放置生成的索引文件和配置信息，比如我在 OpenGrok 目录下创建了一个 data 目录用作 data root，即 D:\Programs\opengrok-0.13-rc4\data。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将 OpenGrok 的 lib 目录里的 source.war 解压到 D:\Programs\apache-tomcat-8.5.8\webapps\source，配置 WEB-INF\web.xml 文件的 CONFIGURATION 为上一步生成的 data 目录下的 configureation.xml，比如我的配置：&lt;/p&gt;

    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;OpenGrok&lt;span class=&quot;nt&quot;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;A wicked fast source browser&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Full path to the configuration file where OpenGrok can read its configuration&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;CONFIGURATION&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;D:/Programs/opengrok-0.13-rc4/data/configuration.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;em&gt;注：这里只是配置一个文件路径，具体的 configuration.xml 会在第 8 步时自动生成。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置 source root。&lt;/p&gt;

    &lt;p&gt;可以让 OpenGrok 认为 source root 下的每个子文件夹是一个项目，所以我们利用这个特性来配置和阅读多个项目源码就好了。&lt;/p&gt;

    &lt;p&gt;我的做法是在 OpenGrok 下创建了一个子目录 D:\Programs\opengrok-0.13-rc4\projects，然后将需要阅读的源码使用符号链接的方式链接到这个目录里：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /d D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;rojects
mklink /J android D:&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ources&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;ndroid_5.1
mklink /J openjdk7 D:&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ources&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;penjdk7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这样就有一个叫 android 的工程，它实际对应 D:\sources\android_5.1 下的源码，一个叫 openjdk7 的工程，它实际对应 D:\sources\openjdk7 下的源码。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;建立索引。&lt;/p&gt;

    &lt;p&gt;使用 opengrok.jar 调用 ctags 来为源码建立索引。命令行：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; /path/to/opengrok.jar &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /path/to/source/root &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; /path/to/data/root &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; /path/to/configuration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-P&lt;/code&gt; 表示为 source root 目录下的每个一级子目录生成一个工程。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-S&lt;/code&gt; 表示搜索并添加 “external” source repositories。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; 表示打印操作的进度信息。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 表示指定 source root。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; 表示指定 data root。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-W&lt;/code&gt; 表示指定将配置写到该文件。&lt;/p&gt;

    &lt;p&gt;还有更多配置选项可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar /path/to/opengrok.jar&lt;/code&gt; 查看。&lt;/p&gt;

    &lt;p&gt;比如我使用的完整命令行：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\l&lt;/span&gt;ib&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok.jar &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;rojects &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;ata &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;ata&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;onfiguration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;每次需要建立或更新索引的时候敲这么长一个命令当然很不爽，使用 doskey 或者 Cmder 里的 alias 命令将其 alias 为 opengrok-index 命令会省力不少，再不济把这命令存成个 bat 文件也行啊。&lt;/p&gt;

    &lt;p&gt;为大型源码建立索引可能需要漫长的时间，这时候可以去干点别的事了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动 Tomcat，愉快地 RTFSC。&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;pache-tomcat-8.5.8&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;atalina.bat start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;用你最爱的浏览器打开 &lt;a href=&quot;http://localhost:8080/source/&quot;&gt;http://localhost:8080/source/&lt;/a&gt;，然后就能愉快地跟 OpenGrok 玩耍了。&lt;/p&gt;

    &lt;p&gt;当新添加了项目，或者现有项目有源码更新时，再次执行上一步的命令，就能增量更新索引了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;配置多项目&quot;&gt;配置多项目&lt;/h3&gt;

&lt;p&gt;我曾经为如何在 OpenGrok 里配置多项目苦恼了好久——一开始我是把 Android 源码的根目录当作 source root 的，可想而知 OpenGrok 把 Android 分成了好多个子项目，而这时我也没法再添加新的工程了。&lt;/p&gt;

&lt;p&gt;后来才发现建一个专用的 source root，然后把各种项目源码根目录软链接过来，让 OpenGrok 为 source root 下的每个 symbol 一级子目录建立一个项目才是正确的使用方法。&lt;/p&gt;

&lt;p&gt;Windows 下建立软链接的方法是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mklink /J android D:\sources\android_5.1&lt;/code&gt;，Mac OS X 和 Linux 下可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ln -s /path/to/source project_name&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;折腾狂魔&quot;&gt;折腾狂魔&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;在 Vim 里使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;没错，还有人做了支持在 Vim 里使用 OpenGrok 的插件，如果你是 Vim 控+折腾狂魔，可以一试，这里仅给出插件地址：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/asenac/vim-opengrok&quot;&gt;asenac/vim-opengrok&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jdevera/vim-opengrok-search&quot;&gt;jdevera/vim-opengrok-search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;反正像我这种智商是折腾不动了，就安心在浏览器里用了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在源码里做笔记&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;配合 Chrome 插件 &lt;a href=&quot;https://chrome.google.com/webstore/detail/diigo-web-collector-captu/pnhplgjpclknigjpccbcnmicgcieojbh&quot;&gt;Diigo&lt;/a&gt;，还能给源码加标签，写注释等等。&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;https://www.zhihu.com/question/33505693/answer/132224974&quot;&gt;https://www.zhihu.com/question/33505693/answer/132224974&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;常见问题&quot;&gt;常见问题&lt;/h2&gt;

&lt;h3 id=&quot;打开网页后报错&quot;&gt;打开网页后报错&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;There was an error!
CONFIGURATION parameter has not been configured in web.xml! Please configure your webapp.
Unable to determine source root path. Missing configuration?
java.io.FileNotFoundException: Unable to determine source root path. Missing configuration?
	at org.opensolaris.opengrok.web.PageConfig.checkSourceRootExistence(PageConfig.java:1562)
	at org.apache.jsp.index_jsp._jspService(index_jsp.java:222)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:443)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.opensolaris.opengrok.web.StatisticsFilter.doFilter(StatisticsFilter.java:55)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.opensolaris.opengrok.web.AuthorizationFilter.doFilter(AuthorizationFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这一般是由于更新或切换了 OpenGrok 版本，但却没有将 tomcat 的 webapps 目录下的 source 文件夹替换为对应版本。&lt;/p&gt;

&lt;h2 id=&quot;后话&quot;&gt;后话&lt;/h2&gt;

&lt;p&gt;古人教会了我们工欲善其事，必先利其器的智慧，但我们也不能沉迷和徘徊于各种利器之间，选择一样自己感觉最称手的工具，把它用熟练，少再在这上面花时间折腾，毕竟把有限的生命投入到无限的 RTFSC 才是正道不是么。&lt;/p&gt;</content><author><name></name></author><summary type="html">RTFSC 是程序员打怪升级路上避不开的功课，那营造一个舒适的环境来提升上课的体验就很有必要了。</summary></entry></feed>